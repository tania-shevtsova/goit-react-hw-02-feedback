{"version":3,"sources":["components/feedback/FeedbackOptions.js","components/statictics/Statistics.js","components/section/Section.js","components/notification/Notification.js","components/App.js","index.js"],"names":["FeedbackOptions","onLeaveFeedback","name","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","defaultProps","Section","title","children","Notification","message","App","state","handleClickIncrement","event","preventDefault","target","setState","prev","countTotalFeedback","countPositiveFeedbackPercentage","toFixed","totalAmount","this","totalPercentage","Component","ReactDOM","render","document","getElementById"],"mappings":"4LAyBeA,EAtBS,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,gBACzB,OACI,oCACF,qDAGE,4BAAQC,KAAK,OAAOC,KAAK,SAASC,QAASH,GAA3C,QAGA,4BAAQC,KAAK,UAAUC,KAAK,SAASC,QAASH,GAA9C,WAGA,4BAAQC,KAAK,MAAMC,KAAK,SAASC,QAASH,GAA1C,OAGA,4CCfAI,EAAY,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC3C,OACI,oCACA,uCAAaJ,GACX,6BACA,0CAAgBC,GAChB,6BACA,sCAAYC,GACZ,6BACA,wCAAcC,GACd,6BACA,oDAA0BC,EAA1B,QAMVL,EAAWM,aAAe,CACtBD,mBAAoB,GAKTL,QCbAO,EAVD,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACnB,OACI,iCACA,4BAAKD,GACJC,ICEMC,EANI,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACjB,OACI,8BAAOA,ICyDAC,E,2MAvDbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPW,qBAAuB,SAAAC,GACrBA,EAAMC,iBADwB,IAEtBnB,EAASkB,EAAME,OAAfpB,KACR,EAAKqB,UAAS,SAAAC,GAAI,sBACftB,EAAOsB,EAAKtB,GAAQ,MAEvB,EAAKuB,qBACL,EAAKC,mC,EAGPD,mBAAqB,SAAAL,GAAU,IAAD,EACG,EAAKF,MAEpC,OAH4B,EACpBZ,KADoB,EACdC,QADc,EACLC,K,EAKzBkB,gCAAkC,SAAAN,GAMhC,OALiB,EAAKF,MAAdZ,KAEE,EAAKmB,qBACb,KACAE,W,wEAKF,IAAMC,EAAcC,KAAKJ,qBACnBK,EAAgBD,KAAKH,kCAFpB,EAGuBG,KAAKX,MAA3BZ,EAHD,EAGCA,KAAMC,EAHP,EAGOA,QAASC,EAHhB,EAGgBA,IAEvB,OACE,kBAAC,EAAD,CAASK,MAAM,IACb,kBAAC,EAAD,CACEZ,gBAAiB4B,KAAKV,uBAEnBb,GAAQC,GAAWC,EACxB,kBAAC,EAAD,CACEF,KAAMuB,KAAKX,MAAMZ,KACjBC,QAASsB,KAAKX,MAAMX,QACpBC,IAAKqB,KAAKX,MAAMV,IAChBC,MAAOmB,EACPlB,mBAAoBoB,IAChB,kBAAC,EAAD,CAAcd,QAAQ,2B,GAhDlBe,aCFlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.8c5267f3.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst FeedbackOptions = ({ onLeaveFeedback }) => {\n  return (\n      <>\n    <h2>\n    Please leave feedback\n    </h2>\n      <button name=\"good\" type=\"submit\" onClick={onLeaveFeedback}>\n        Good\n      </button>\n      <button name=\"neutral\" type=\"submit\" onClick={onLeaveFeedback}>\n        Neutral\n      </button>\n      <button name=\"bad\" type=\"submit\" onClick={onLeaveFeedback}>\n        Bad\n      </button>  \n      <h2>Statistics</h2>\n\n      </>\n   \n  );\n};\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes={\n    onLeaveFeedback: PropTypes.func.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Statistics =({good, neutral, bad, total, positivePercentage})=>{\n    return (\n        <>\n        <span>Good: {good}</span>\n          <br/>\n          <span>Neutral: {neutral}</span>\n          <br/>\n          <span>Bad: {bad}</span>\n          <br/>\n          <span>Total: {total}</span>\n          <br/>\n          <span>Positive feedback: {positivePercentage} %</span>\n          </>\n    );\n  \n}\n\nStatistics.defaultProps = {\n    positivePercentage: 0\n  };\n\n\n\nexport default Statistics;\n\nStatistics.propTypes={\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positive: PropTypes.number\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section=({title, children})=>{\n    return(\n        <section>\n        <h2>{title}</h2>\n        {children}\n        </section>\n    )\n   \n}\n\nexport default Section;\n\nSection.propTypes={\n    title: PropTypes.string,\n    children: PropTypes.node.isRequired\n}","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification=({message})=>{\n    return(\n        <span>{message}</span>\n    )\n}\n\nexport default Notification;\n\nNotification.propTypes={\n    message: PropTypes.string.isRequired\n}\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./feedback/FeedbackOptions\";\nimport Statistics from \"./statictics/Statistics\";\nimport Section from \"./section/Section\";\nimport Notification from './notification/Notification'\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  handleClickIncrement = event => {\n    event.preventDefault();\n    const { name } = event.target;\n    this.setState(prev => ({\n      [name]: prev[name] + 1\n    }));\n    this.countTotalFeedback();\n    this.countPositiveFeedbackPercentage();\n  };\n\n  countTotalFeedback = event => {\n    const { good, neutral, bad } = this.state;\n    const totalAmount = good + neutral + bad;\n    return totalAmount;\n  };\n\n  countPositiveFeedbackPercentage = event => {\n    const { good } = this.state;\n    const totalPercentage = (\n      (good / this.countTotalFeedback()) *\n      100\n    ).toFixed();\n    return totalPercentage;\n  };\n\n  render() {\n    const totalAmount = this.countTotalFeedback();\n    const totalPercentage=this.countPositiveFeedbackPercentage();\n    const { good, neutral, bad } =this.state;\n\n    return (\n      <Section title=\"\">\n        <FeedbackOptions\n          onLeaveFeedback={this.handleClickIncrement}\n        ></FeedbackOptions>\n            {good || neutral || bad ?\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          total={totalAmount}\n          positivePercentage={totalPercentage}\n        /> :  <Notification message=\"No feedback given\"></Notification>}\n       \n      </Section>\n    );\n   \n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}